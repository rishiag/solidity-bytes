id: storage-vs-memory-strings
title: Return strings from storage vs memory
difficulty: beginner
tags: [strings, storage, memory, basics]
objectives:
  - Store a string and return it; also return a computed memory string
description: |
  Store a greeting and implement functions to return the stored value and a computed memory string (e.g., "hi").
hints:
  - Returning `string memory` copies storage to memory.
starter:
  files:
    - path: contracts/Greetings.sol
      content: |
        // SPDX-License-Identifier: MIT
        pragma solidity ^0.8.20;

        contract Greetings {
            string private stored;
            // TODO: set(string calldata) and getStored(), getTemp()
        }
    - path: hardhat.config.js
      content: |
        require("@nomicfoundation/hardhat-toolbox");
        module.exports = { solidity: "0.8.20" };
tests:
  files:
    - path: test/Greetings.test.js
      content: |
        const { expect } = require("chai");
        const { ethers } = require("hardhat");

        describe("Greetings", function () {
          it("returns stored string and temp string", async function () {
            const Factory = await ethers.getContractFactory("Greetings");
            const c = await Factory.deploy();
            await c.set("hello");
            expect(await c.getStored()).to.equal("hello");
            expect(await c.getTemp()).to.equal("hi");
          });
        });
solution:
  files:
    - path: contracts/Greetings.sol
      content: |
        // SPDX-License-Identifier: MIT
        pragma solidity ^0.8.20;

        contract Greetings {
            string private stored;
            function set(string calldata s) external { stored = s; }
            function getStored() external view returns (string memory) { return stored; }
            function getTemp() external pure returns (string memory) { return "hi"; }
        }
visibility: after-pass

