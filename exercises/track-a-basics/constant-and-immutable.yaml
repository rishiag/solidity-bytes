id: constant-and-immutable
title: Use constant and immutable state variables
difficulty: beginner
tags: [variables, constants, basics]
objectives:
  - Add `uint256 public constant VERSION = 1`
  - Add `address public immutable DEPLOYER` set in constructor
description: |
  Demonstrate constants and immutables. Constants are compile-time; immutables are set once in constructor.
hints:
  - Use `constructor()` to set the immutable to `msg.sender`.
starter:
  files:
    - path: contracts/Flags.sol
      content: |
        // SPDX-License-Identifier: MIT
        pragma solidity ^0.8.20;

        contract Flags {
            // TODO: constant VERSION and immutable DEPLOYER
        }
    - path: hardhat.config.js
      content: |
        require("@nomicfoundation/hardhat-toolbox");
        module.exports = { solidity: "0.8.20" };
tests:
  files:
    - path: test/Flags.test.js
      content: |
        const { expect } = require("chai");
        const { ethers } = require("hardhat");

        describe("Flags", function () {
          it("constant and immutable set correctly", async function () {
            const [deployer] = await ethers.getSigners();
            const Factory = await ethers.getContractFactory("Flags");
            const c = await Factory.deploy();
            expect(await c.VERSION()).to.equal(1n);
            expect(await c.DEPLOYER()).to.equal(deployer.address);
          });
        });
solution:
  files:
    - path: contracts/Flags.sol
      content: |
        // SPDX-License-Identifier: MIT
        pragma solidity ^0.8.20;

        contract Flags {
            uint256 public constant VERSION = 1;
            address public immutable DEPLOYER;

            constructor() {
                DEPLOYER = msg.sender;
            }
        }
visibility: after-pass

