id: state-int-bool
title: Declare int256 and bool state variables
difficulty: beginner
tags: [variables, basics]
objectives:
  - Declare `int256 public n` and `bool public flag`
  - Understand default values (0 and false)
description: |
  Add two state variables: a signed integer `int256 n` and a boolean `flag`, both `public`.
hints:
  - Signed ints are `intX` where X is bits; `int256` is most common.
  - `public` auto-generates getters.
starter:
  files:
    - path: contracts/Vars.sol
      content: |
        // SPDX-License-Identifier: MIT
        pragma solidity ^0.8.20;

        contract Vars {
            // TODO
        }
    - path: hardhat.config.js
      content: |
        require("@nomicfoundation/hardhat-toolbox");
        module.exports = { solidity: "0.8.20" };
tests:
  files:
    - path: test/Vars.test.js
      content: |
        const { expect } = require("chai");
        const { ethers } = require("hardhat");

        describe("Vars", function () {
          it("exposes defaults via public getters", async function () {
            const Factory = await ethers.getContractFactory("Vars");
            const c = await Factory.deploy();
            expect(await c.n()).to.equal(0n);
            expect(await c.flag()).to.equal(false);
          });
        });
solution:
  files:
    - path: contracts/Vars.sol
      content: |
        // SPDX-License-Identifier: MIT
        pragma solidity ^0.8.20;

        contract Vars {
            int256 public n;
            bool public flag;
        }
visibility: after-pass

