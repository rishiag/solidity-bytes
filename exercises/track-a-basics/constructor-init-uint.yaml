id: constructor-init-uint
title: Initialize a uint256 in the constructor
difficulty: beginner
tags: [variables, constructor, basics]
objectives:
  - Add a constructor that takes `uint256 initial` and sets state
  - Verify getter returns the initial value
description: |
  Implement a constructor that accepts `uint256 initial` and assigns it to `number`.
hints:
  - Constructors run once at deployment.
starter:
  files:
    - path: contracts/InitNumber.sol
      content: |
        // SPDX-License-Identifier: MIT
        pragma solidity ^0.8.20;

        contract InitNumber {
            uint256 public number;

            // TODO: constructor(uint256 initial) { ... }
        }
    - path: hardhat.config.js
      content: |
        require("@nomicfoundation/hardhat-toolbox");
        module.exports = { solidity: "0.8.20" };
tests:
  files:
    - path: test/InitNumber.test.js
      content: |
        const { expect } = require("chai");
        const { ethers } = require("hardhat");

        describe("InitNumber", function () {
          it("sets initial value via constructor", async function () {
            const Factory = await ethers.getContractFactory("InitNumber");
            const c = await Factory.deploy(42);
            expect(await c.number()).to.equal(42n);
          });
        });
solution:
  files:
    - path: contracts/InitNumber.sol
      content: |
        // SPDX-License-Identifier: MIT
        pragma solidity ^0.8.20;

        contract InitNumber {
            uint256 public number;

            constructor(uint256 initial) {
                number = initial;
            }
        }
visibility: after-pass

